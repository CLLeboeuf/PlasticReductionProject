@model PlasticReductionProject.Models.CalculatorResult
@{
    ViewBag.Title = "Your Plastic Footprint";
    ViewBag.Counter = 0;
}

<img class="bg" src="~/Images/SeaBackground.jpg" />
<div id="fb-root"></div>
<script async defer crossorigin="anonymous" src="https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v16.0" nonce="4l2glAJT">

</script>

<table align="center" width="80%">
    <tr>
        <td align="center" width="40%">
            <p>

                <img src=@ViewBag.Image width="50%" />
                <br />

                <div class="fb-share-button"
                     data-href="https://developers.facebook.com/docs/plugins/"
                     data-layout="button_count" data-size="small">
                    <a target="_blank" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fdevelopers.facebook.com%2Fdocs%2Fplugins%2F&amp;src=sdkpreparse" class="fb-xfbml-parse-ignore">Share</a>
                </div>
            </p>
        </td>
        <td align="center" width="40%">
            <p>@ViewBag.Comment</p>
            <br />
            </td>
    </tr>
</table>
<br />
<div class="result" align="center">
    <p><b>@ViewBag.Title</b></p>

    @{ var test = Model.Results.ToList();}

    <table style="width:80%">
        <tr>
            <td align="center">
                <p>The area where you could improve</p>
            </td>
            <td align="center">
                <p>The area where you did the best</p>
            </td>
        </tr>

        <tr>
            @{
                var highest = Model.PlasticScores.First(x => x.Name == ViewBag.HighestProduct);
                var characterName = highest.Type.CharName;
                var charImageURL = highest.Type.Image; 
                var plasticName = highest.Type.Type;
                var plasticDescription = highest.Type.Description;
                var productList = test.Where(x => x.Product.Type == highest.Type.Id).ToList();
                var barStyle = "";
                var stringStyle = "";
                var resultString = "";
                if (highest.Score > 3 * highest.Average)
                {
                    barStyle = "background-color:aliceblue; width:90%;";
                    stringStyle = "background-color:red;width:80%;";
                    resultString = "Very High";
                }
                else if (highest.Score > 2 * highest.Average)
                {
                    barStyle = "background-color:aliceblue; width:90%;";
                    stringStyle = "background-color:hotpink;width:60%";
                    resultString = "High";
                }
                else if (highest.Score < highest.Average / 1.5)
                {
                    barStyle = "background-color:aliceblue; width:90%;";
                    stringStyle = "background-color:green;width:40%";
                    resultString = "Low";
                }
                else if (highest.Score < highest.Average / 2)
                {
                    barStyle = "background-color:aliceblue; width:20%;";
                    stringStyle = "background-color:greenyellow;width:80%;";
                    resultString = "Very Low";
                }
                else
                {
                    barStyle = "background-color:aliceblue; width:50%;";
                    stringStyle = "background-color:blue;width:80%;";
                    resultString = "Average";
                }

                <td align="center" valign="top" class="resultBackground">
                    <p><b>@characterName</b></p>
                    <image class="image" src=@charImageURL height="100px">
                        <p class="bubbleHover bubble-bottom-left-hover" style="position: absolute; bottom: 280px; font-size: 13px ">
                            @plasticDescription <br /> The products tested in this category were: 
                            @foreach (var item in productList)
            {
                @item.Product.Description
                                <br />
            }
                        </p>
                        <p>@plasticName</p>
                        <div align="left" style=@barStyle>
                            <div align="center" style=@stringStyle>@resultString</div>
                        </div>
                        <p>
                            You can find some alternatives<br />
                            <span class="btn btn-default" align="center" style="margin: 5px"> @Html.ActionLink("here", "altButton", "Calculator", new { ProductId = highest.Type.Id }, null)</span>
                        </p>
                </td>


                var lowest = Model.PlasticScores.First(x => x.Name == ViewBag.LowestProduct);
                characterName = lowest.Type.CharName;
                charImageURL = lowest.Type.Image;
                plasticName = lowest.Type.Type;
                plasticDescription = lowest.Type.Description;
                productList = test.Where(x => x.Product.Type == lowest.Type.Id).ToList();
                barStyle = "";
                stringStyle = "";
                resultString = "";
                if (lowest.Score > 3 * lowest.Average)
                {
                    barStyle = "background-color:aliceblue; width:90%;";
                    stringStyle = "background-color:red;width:80%;";
                    resultString = "Very High";
                }
                else if (lowest.Score > 2 * lowest.Average)
                {
                    barStyle = "background-color:aliceblue; width:90%;";
                    stringStyle = "background-color:hotpink;width:60%";
                    resultString = "High";
                }
                else if (lowest.Score < lowest.Average / 1.5)
                {
                    barStyle = "background-color:aliceblue; width:90%;";
                    stringStyle = "background-color:green;width:40%";
                    resultString = "Low";
                }
                else if (lowest.Score < lowest.Average / 2)
                {
                    barStyle = "background-color:aliceblue; width:20%;";
                    stringStyle = "background-color:greenyellow;width:80%;";
                    resultString = "Very Low";
                }
                else
                {
                    barStyle = "background-color:aliceblue; width:50%;";
                    stringStyle = "background-color:blue;width:80%;";
                    resultString = "Average";
                }

                <td align="center" valign="top" class="resultBackground">
                    <p><b>@characterName</b></p>
                    <image class="image" src=@charImageURL height="100px">
                        <p class="bubbleHover bubble-bottom-left-hover" style="position: absolute; bottom: 280px; font-size: 13px ">
                            @plasticDescription <br />
                            The products tested in this category were:
                                                    @foreach (var item in productList)
                                                    {
                                                        @item.Product.Description
                                                    }           
                        </p>
                        <p>@plasticName</p>
                        <div align="left" style=@barStyle>
                            <div align="center" style=@stringStyle>@resultString</div>
                        </div>
                        <p>
                            You can find some alternatives<br />
                            <span class="btn btn-default" align="center" style="margin: 5px"> @Html.ActionLink("here", "altButton", "Calculator", new { ProductId = lowest.Type.Id }, null)</span>
                        </p>
                    </td>
                }


            </tr>
        </table>
        <br />
</div>